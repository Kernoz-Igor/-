
lab2c:     формат файла elf64-x86-64


Дизассемблирование раздела .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Дизассемблирование раздела .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 0d a1 24 c1 5b    	add    %cl,0x5bc124a1(%rip)        # 5bc1280e <_end+0x5bc0e7f6>
 36d:	8a f2                	mov    %dl,%dh
 36f:	50                   	push   %rax
 370:	3a e6                	cmp    %dh,%ah
 372:	3b d7                	cmp    %edi,%edx
 374:	9a                   	(bad)  
 375:	79 83                	jns    2fa <_init-0xd06>
 377:	4e 50                	rex.WRX push %rax
 379:	27                   	(bad)  
 37a:	8e c2                	mov    %edx,%es

Дизассемблирование раздела .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	07                   	(bad)  
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 01                	add    %al,(%rcx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 06                	add    %al,(%rsi)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 07                	add    %al,(%rdi)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Дизассемблирование раздела .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	5a                   	pop    %rdx
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 20                	add    %ah,(%rax)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 0b                	add    %cl,(%rbx)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 1c 00             	add    %bl,(%rax,%rax,1)
 412:	00 00                	add    %al,(%rax)
 414:	12 00                	adc    (%rax),%al
	...
 426:	00 00                	add    %al,(%rax)
 428:	32 00                	xor    (%rax),%al
 42a:	00 00                	add    %al,(%rax)
 42c:	12 00                	adc    (%rax),%al
	...
 43e:	00 00                	add    %al,(%rax)
 440:	76 00                	jbe    442 <_init-0xbbe>
 442:	00 00                	add    %al,(%rax)
 444:	20 00                	and    %al,(%rax)
	...
 456:	00 00                	add    %al,(%rax)
 458:	85 00                	test   %eax,(%rax)
 45a:	00 00                	add    %al,(%rax)
 45c:	20 00                	and    %al,(%rax)
	...
 46e:	00 00                	add    %al,(%rax)
 470:	23 00                	and    (%rax),%eax
 472:	00 00                	add    %al,(%rax)
 474:	22 00                	and    (%rax),%al
	...

Дизассемблирование раздела .dynstr:

0000000000000488 <.dynstr>:
 488:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 48c:	63 2e                	movslq (%rsi),%ebp
 48e:	73 6f                	jae    4ff <_init-0xb01>
 490:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 495:	73 74                	jae    50b <_init-0xaf5>
 497:	61                   	(bad)  
 498:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 49b:	63 68 6b             	movslq 0x6b(%rax),%ebp
 49e:	5f                   	pop    %rdi
 49f:	66 61                	data16 (bad) 
 4a1:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 4a8:	74 
 4a9:	66 00 5f 5f          	data16 add %bl,0x5f(%rdi)
 4ad:	63 78 61             	movslq 0x61(%rax),%edi
 4b0:	5f                   	pop    %rdi
 4b1:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4b7:	7a 65                	jp     51e <_init-0xae2>
 4b9:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4bc:	6c                   	insb   (%dx),%es:(%rdi)
 4bd:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 4c4:	72 74                	jb     53a <_init-0xac6>
 4c6:	5f                   	pop    %rdi
 4c7:	6d                   	insl   (%dx),%es:(%rdi)
 4c8:	61                   	(bad)  
 4c9:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 4d0:	43 5f                	rex.XB pop %r15
 4d2:	32 2e                	xor    (%rsi),%ch
 4d4:	32 2e                	xor    (%rsi),%ch
 4d6:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 4db:	42                   	rex.X
 4dc:	43 5f                	rex.XB pop %r15
 4de:	32 2e                	xor    (%rsi),%ch
 4e0:	34 00                	xor    $0x0,%al
 4e2:	5f                   	pop    %rdi
 4e3:	49 54                	rex.WB push %r12
 4e5:	4d 5f                	rex.WRB pop %r15
 4e7:	64 65 72 65          	fs gs jb 550 <_init-0xab0>
 4eb:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4f2:	4d 
 4f3:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4f5:	6f                   	outsl  %ds:(%rsi),(%dx)
 4f6:	6e                   	outsb  %ds:(%rsi),(%dx)
 4f7:	65 54                	gs push %rsp
 4f9:	61                   	(bad)  
 4fa:	62                   	(bad)  
 4fb:	6c                   	insb   (%dx),%es:(%rdi)
 4fc:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 500:	67 6d                	insl   (%dx),%es:(%edi)
 502:	6f                   	outsl  %ds:(%rsi),(%dx)
 503:	6e                   	outsb  %ds:(%rsi),(%dx)
 504:	5f                   	pop    %rdi
 505:	73 74                	jae    57b <_init-0xa85>
 507:	61                   	(bad)  
 508:	72 74                	jb     57e <_init-0xa82>
 50a:	5f                   	pop    %rdi
 50b:	5f                   	pop    %rdi
 50c:	00 5f 49             	add    %bl,0x49(%rdi)
 50f:	54                   	push   %rsp
 510:	4d 5f                	rex.WRB pop %r15
 512:	72 65                	jb     579 <_init-0xa87>
 514:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 51b:	4d 
 51c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 51e:	6f                   	outsl  %ds:(%rsi),(%dx)
 51f:	6e                   	outsb  %ds:(%rsi),(%dx)
 520:	65 54                	gs push %rsp
 522:	61                   	(bad)  
 523:	62                   	.byte 0x62
 524:	6c                   	insb   (%dx),%es:(%rdi)
 525:	65                   	gs
	...

Дизассемблирование раздела .gnu.version:

0000000000000528 <.gnu.version>:
 528:	00 00                	add    %al,(%rax)
 52a:	00 00                	add    %al,(%rax)
 52c:	02 00                	add    (%rax),%al
 52e:	03 00                	add    (%rax),%eax
 530:	03 00                	add    (%rax),%eax
 532:	00 00                	add    %al,(%rax)
 534:	00 00                	add    %al,(%rax)
 536:	03 00                	add    (%rax),%eax

Дизассемблирование раздела .gnu.version_r:

0000000000000538 <.gnu.version_r>:
 538:	01 00                	add    %eax,(%rax)
 53a:	02 00                	add    (%rax),%al
 53c:	01 00                	add    %eax,(%rax)
 53e:	00 00                	add    %al,(%rax)
 540:	10 00                	adc    %al,(%rax)
 542:	00 00                	add    %al,(%rax)
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	75 1a                	jne    564 <_init-0xa9c>
 54a:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
 550:	44 00 00             	add    %r8b,(%rax)
 553:	00 10                	add    %dl,(%rax)
 555:	00 00                	add    %al,(%rax)
 557:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 55a:	69 0d 00 00 02 00 50 	imul   $0x50,0x20000(%rip),%ecx        # 20564 <_end+0x1c54c>
 561:	00 00 00 
 564:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .rela.dyn:

0000000000000568 <.rela.dyn>:
 568:	b0 3d                	mov    $0x3d,%al
 56a:	00 00                	add    %al,(%rax)
 56c:	00 00                	add    %al,(%rax)
 56e:	00 00                	add    %al,(%rax)
 570:	08 00                	or     %al,(%rax)
 572:	00 00                	add    %al,(%rax)
 574:	00 00                	add    %al,(%rax)
 576:	00 00                	add    %al,(%rax)
 578:	60                   	(bad)  
 579:	11 00                	adc    %eax,(%rax)
 57b:	00 00                	add    %al,(%rax)
 57d:	00 00                	add    %al,(%rax)
 57f:	00 b8 3d 00 00 00    	add    %bh,0x3d(%rax)
 585:	00 00                	add    %al,(%rax)
 587:	00 08                	add    %cl,(%rax)
 589:	00 00                	add    %al,(%rax)
 58b:	00 00                	add    %al,(%rax)
 58d:	00 00                	add    %al,(%rax)
 58f:	00 20                	add    %ah,(%rax)
 591:	11 00                	adc    %eax,(%rax)
 593:	00 00                	add    %al,(%rax)
 595:	00 00                	add    %al,(%rax)
 597:	00 08                	add    %cl,(%rax)
 599:	40 00 00             	add    %al,(%rax)
 59c:	00 00                	add    %al,(%rax)
 59e:	00 00                	add    %al,(%rax)
 5a0:	08 00                	or     %al,(%rax)
 5a2:	00 00                	add    %al,(%rax)
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	08 40 00             	or     %al,0x0(%rax)
 5ab:	00 00                	add    %al,(%rax)
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 d8                	add    %bl,%al
 5b1:	3f                   	(bad)  
 5b2:	00 00                	add    %al,(%rax)
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 00                	add    %al,(%rax)
 5b8:	06                   	(bad)  
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 01                	add    %al,(%rcx)
	...
 5c5:	00 00                	add    %al,(%rax)
 5c7:	00 e0                	add    %ah,%al
 5c9:	3f                   	(bad)  
 5ca:	00 00                	add    %al,(%rax)
 5cc:	00 00                	add    %al,(%rax)
 5ce:	00 00                	add    %al,(%rax)
 5d0:	06                   	(bad)  
 5d1:	00 00                	add    %al,(%rax)
 5d3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 5de:	00 00                	add    %al,(%rax)
 5e0:	e8 3f 00 00 00       	callq  624 <_init-0x9dc>
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 06                	add    %al,(%rsi)
 5e9:	00 00                	add    %al,(%rax)
 5eb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 5f1 <_init-0xa0f>
 5f1:	00 00                	add    %al,(%rax)
 5f3:	00 00                	add    %al,(%rax)
 5f5:	00 00                	add    %al,(%rax)
 5f7:	00 f0                	add    %dh,%al
 5f9:	3f                   	(bad)  
 5fa:	00 00                	add    %al,(%rax)
 5fc:	00 00                	add    %al,(%rax)
 5fe:	00 00                	add    %al,(%rax)
 600:	06                   	(bad)  
 601:	00 00                	add    %al,(%rax)
 603:	00 06                	add    %al,(%rsi)
	...
 60d:	00 00                	add    %al,(%rax)
 60f:	00 f8                	add    %bh,%al
 611:	3f                   	(bad)  
 612:	00 00                	add    %al,(%rax)
 614:	00 00                	add    %al,(%rax)
 616:	00 00                	add    %al,(%rax)
 618:	06                   	(bad)  
 619:	00 00                	add    %al,(%rax)
 61b:	00 07                	add    %al,(%rdi)
	...

Дизассемблирование раздела .rela.plt:

0000000000000628 <.rela.plt>:
 628:	c8 3f 00 00          	enterq $0x3f,$0x0
 62c:	00 00                	add    %al,(%rax)
 62e:	00 00                	add    %al,(%rax)
 630:	07                   	(bad)  
 631:	00 00                	add    %al,(%rax)
 633:	00 02                	add    %al,(%rdx)
	...
 63d:	00 00                	add    %al,(%rax)
 63f:	00 d0                	add    %dl,%al
 641:	3f                   	(bad)  
 642:	00 00                	add    %al,(%rax)
 644:	00 00                	add    %al,(%rax)
 646:	00 00                	add    %al,(%rax)
 648:	07                   	(bad)  
 649:	00 00                	add    %al,(%rax)
 64b:	00 03                	add    %al,(%rbx)
	...

Дизассемблирование раздела .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Дизассемблирование раздела .plt:

0000000000001020 <.plt>:
    1020:	ff 35 92 2f 00 00    	pushq  0x2f92(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 93 2f 00 00 	bnd jmpq *0x2f93(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop

Дизассемблирование раздела .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 9d 2f 00 00 	bnd jmpq *0x2f9d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Дизассемблирование раздела .plt.sec:

0000000000001060 <__stack_chk_fail@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 5d 2f 00 00 	bnd jmpq *0x2f5d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001070 <printf@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 55 2f 00 00 	bnd jmpq *0x2f55(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Дизассемблирование раздела .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	4c 8d 05 36 02 00 00 	lea    0x236(%rip),%r8        # 12d0 <__libc_csu_fini>
    109a:	48 8d 0d bf 01 00 00 	lea    0x1bf(%rip),%rcx        # 1260 <__libc_csu_init>
    10a1:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1169 <main>
    10a8:	ff 15 32 2f 00 00    	callq  *0x2f32(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ae:	f4                   	hlt    
    10af:	90                   	nop

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4010 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4010 <__TMC_END__>
    10e7:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4010 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	80 3d e5 2e 00 00 00 	cmpb   $0x0,0x2ee5(%rip)        # 4010 <__TMC_END__>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   %rbp
    112e:	48 83 3d c2 2e 00 00 	cmpq   $0x0,0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:	e8 09 ff ff ff       	callq  1050 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	callq  10b0 <deregister_tm_clones>
    114c:	c6 05 bd 2e 00 00 01 	movb   $0x1,0x2ebd(%rip)        # 4010 <__TMC_END__>
    1153:	5d                   	pop    %rbp
    1154:	c3                   	retq   
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	e9 77 ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001169 <main>:
    1169:	f3 0f 1e fa          	endbr64 
    116d:	55                   	push   %rbp
    116e:	48 89 e5             	mov    %rsp,%rbp
    1171:	48 83 ec 40          	sub    $0x40,%rsp
    1175:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    117c:	00 00 
    117e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1182:	31 c0                	xor    %eax,%eax
    1184:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
    118b:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%rbp)
    1192:	c7 45 d8 03 00 00 00 	movl   $0x3,-0x28(%rbp)
    1199:	c7 45 dc 04 00 00 00 	movl   $0x4,-0x24(%rbp)
    11a0:	c7 45 e0 05 00 00 00 	movl   $0x5,-0x20(%rbp)
    11a7:	c7 45 e4 06 00 00 00 	movl   $0x6,-0x1c(%rbp)
    11ae:	c7 45 e8 07 00 00 00 	movl   $0x7,-0x18(%rbp)
    11b5:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%rbp)
    11bc:	c7 45 f0 09 00 00 00 	movl   $0x9,-0x10(%rbp)
    11c3:	c7 45 f4 0a 00 00 00 	movl   $0xa,-0xc(%rbp)
    11ca:	c7 45 cc 04 00 00 00 	movl   $0x4,-0x34(%rbp)
    11d1:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    11d8:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    11df:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
    11e6:	eb 24                	jmp    120c <main+0xa3>
    11e8:	8b 45 c8             	mov    -0x38(%rbp),%eax
    11eb:	48 98                	cltq   
    11ed:	8b 44 85 d0          	mov    -0x30(%rbp,%rax,4),%eax
    11f1:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    11f4:	7d 0e                	jge    1204 <main+0x9b>
    11f6:	8b 45 c8             	mov    -0x38(%rbp),%eax
    11f9:	48 98                	cltq   
    11fb:	8b 44 85 d0          	mov    -0x30(%rbp,%rax,4),%eax
    11ff:	01 45 c4             	add    %eax,-0x3c(%rbp)
    1202:	eb 04                	jmp    1208 <main+0x9f>
    1204:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
    1208:	83 45 c8 01          	addl   $0x1,-0x38(%rbp)
    120c:	83 7d c8 09          	cmpl   $0x9,-0x38(%rbp)
    1210:	7e d6                	jle    11e8 <main+0x7f>
    1212:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1215:	89 c6                	mov    %eax,%esi
    1217:	48 8d 3d e6 0d 00 00 	lea    0xde6(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    121e:	b8 00 00 00 00       	mov    $0x0,%eax
    1223:	e8 48 fe ff ff       	callq  1070 <printf@plt>
    1228:	8b 45 c0             	mov    -0x40(%rbp),%eax
    122b:	89 c6                	mov    %eax,%esi
    122d:	48 8d 3d e7 0d 00 00 	lea    0xde7(%rip),%rdi        # 201b <_IO_stdin_used+0x1b>
    1234:	b8 00 00 00 00       	mov    $0x0,%eax
    1239:	e8 32 fe ff ff       	callq  1070 <printf@plt>
    123e:	b8 00 00 00 00       	mov    $0x0,%eax
    1243:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1247:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    124e:	00 00 
    1250:	74 05                	je     1257 <main+0xee>
    1252:	e8 09 fe ff ff       	callq  1060 <__stack_chk_fail@plt>
    1257:	c9                   	leaveq 
    1258:	c3                   	retq   
    1259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001260 <__libc_csu_init>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	41 57                	push   %r15
    1266:	4c 8d 3d 43 2b 00 00 	lea    0x2b43(%rip),%r15        # 3db0 <__frame_dummy_init_array_entry>
    126d:	41 56                	push   %r14
    126f:	49 89 d6             	mov    %rdx,%r14
    1272:	41 55                	push   %r13
    1274:	49 89 f5             	mov    %rsi,%r13
    1277:	41 54                	push   %r12
    1279:	41 89 fc             	mov    %edi,%r12d
    127c:	55                   	push   %rbp
    127d:	48 8d 2d 34 2b 00 00 	lea    0x2b34(%rip),%rbp        # 3db8 <__do_global_dtors_aux_fini_array_entry>
    1284:	53                   	push   %rbx
    1285:	4c 29 fd             	sub    %r15,%rbp
    1288:	48 83 ec 08          	sub    $0x8,%rsp
    128c:	e8 6f fd ff ff       	callq  1000 <_init>
    1291:	48 c1 fd 03          	sar    $0x3,%rbp
    1295:	74 1f                	je     12b6 <__libc_csu_init+0x56>
    1297:	31 db                	xor    %ebx,%ebx
    1299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12a0:	4c 89 f2             	mov    %r14,%rdx
    12a3:	4c 89 ee             	mov    %r13,%rsi
    12a6:	44 89 e7             	mov    %r12d,%edi
    12a9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    12ad:	48 83 c3 01          	add    $0x1,%rbx
    12b1:	48 39 dd             	cmp    %rbx,%rbp
    12b4:	75 ea                	jne    12a0 <__libc_csu_init+0x40>
    12b6:	48 83 c4 08          	add    $0x8,%rsp
    12ba:	5b                   	pop    %rbx
    12bb:	5d                   	pop    %rbp
    12bc:	41 5c                	pop    %r12
    12be:	41 5d                	pop    %r13
    12c0:	41 5e                	pop    %r14
    12c2:	41 5f                	pop    %r15
    12c4:	c3                   	retq   
    12c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    12cc:	00 00 00 00 

00000000000012d0 <__libc_csu_fini>:
    12d0:	f3 0f 1e fa          	endbr64 
    12d4:	c3                   	retq   

Дизассемблирование раздела .fini:

00000000000012d8 <_fini>:
    12d8:	f3 0f 1e fa          	endbr64 
    12dc:	48 83 ec 08          	sub    $0x8,%rsp
    12e0:	48 83 c4 08          	add    $0x8,%rsp
    12e4:	c3                   	retq   

Дизассемблирование раздела .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	50                   	push   %rax
    2005:	72 6f                	jb     2076 <__GNU_EH_FRAME_HDR+0x42>
    2007:	67 72 61             	addr32 jb 206b <__GNU_EH_FRAME_HDR+0x37>
    200a:	6d                   	insl   (%dx),%es:(%rdi)
    200b:	6d                   	insl   (%dx),%es:(%rdi)
    200c:	20 43 2c             	and    %al,0x2c(%rbx)
    200f:	20 53 75             	and    %dl,0x75(%rbx)
    2012:	6d                   	insl   (%dx),%es:(%rdi)
    2013:	6d                   	insl   (%dx),%es:(%rdi)
    2014:	3d 3d 20 25 64       	cmp    $0x6425203d,%eax
    2019:	0a 00                	or     (%rax),%al
    201b:	50                   	push   %rax
    201c:	72 6f                	jb     208d <__GNU_EH_FRAME_HDR+0x59>
    201e:	67 72 61             	addr32 jb 2082 <__GNU_EH_FRAME_HDR+0x4e>
    2021:	6d                   	insl   (%dx),%es:(%rdi)
    2022:	6d                   	insl   (%dx),%es:(%rdi)
    2023:	20 43 2c             	and    %al,0x2c(%rbx)
    2026:	20 43 6f             	and    %al,0x6f(%rbx)
    2029:	75 6e                	jne    2099 <__GNU_EH_FRAME_HDR+0x65>
    202b:	74 3d                	je     206a <__GNU_EH_FRAME_HDR+0x36>
    202d:	3d 20 25 64 0a       	cmp    $0xa642520,%eax
	...

Дизассемблирование раздела .eh_frame_hdr:

0000000000002034 <__GNU_EH_FRAME_HDR>:
    2034:	01 1b                	add    %ebx,(%rbx)
    2036:	03 3b                	add    (%rbx),%edi
    2038:	40 00 00             	add    %al,(%rax)
    203b:	00 07                	add    %al,(%rdi)
    203d:	00 00                	add    %al,(%rax)
    203f:	00 ec                	add    %ch,%ah
    2041:	ef                   	out    %eax,(%dx)
    2042:	ff                   	(bad)  
    2043:	ff 74 00 00          	pushq  0x0(%rax,%rax,1)
    2047:	00 1c f0             	add    %bl,(%rax,%rsi,8)
    204a:	ff                   	(bad)  
    204b:	ff 9c 00 00 00 2c f0 	lcall  *-0xfd40000(%rax,%rax,1)
    2052:	ff                   	(bad)  
    2053:	ff b4 00 00 00 4c f0 	pushq  -0xfb40000(%rax,%rax,1)
    205a:	ff                   	(bad)  
    205b:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
    205f:	00 35 f1 ff ff cc    	add    %dh,-0x3300000f(%rip)        # ffffffffcd002056 <_end+0xffffffffccffe03e>
    2065:	00 00                	add    %al,(%rax)
    2067:	00 2c f2             	add    %ch,(%rdx,%rsi,8)
    206a:	ff                   	(bad)  
    206b:	ff                   	(bad)  
    206c:	ec                   	in     (%dx),%al
    206d:	00 00                	add    %al,(%rax)
    206f:	00 9c f2 ff ff 34 01 	add    %bl,0x134ffff(%rdx,%rsi,8)
	...

Дизассемблирование раздела .eh_frame:

0000000000002078 <__FRAME_END__-0x104>:
    2078:	14 00                	adc    $0x0,%al
    207a:	00 00                	add    %al,(%rax)
    207c:	00 00                	add    %al,(%rax)
    207e:	00 00                	add    %al,(%rax)
    2080:	01 7a 52             	add    %edi,0x52(%rdx)
    2083:	00 01                	add    %al,(%rcx)
    2085:	78 10                	js     2097 <__GNU_EH_FRAME_HDR+0x63>
    2087:	01 1b                	add    %ebx,(%rbx)
    2089:	0c 07                	or     $0x7,%al
    208b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2091:	00 00                	add    %al,(%rax)
    2093:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2096:	00 00                	add    %al,(%rax)
    2098:	e8 ef ff ff 2f       	callq  3000208c <_end+0x2fffe074>
    209d:	00 00                	add    %al,(%rax)
    209f:	00 00                	add    %al,(%rax)
    20a1:	44 07                	rex.R (bad) 
    20a3:	10 00                	adc    %al,(%rax)
    20a5:	00 00                	add    %al,(%rax)
    20a7:	00 24 00             	add    %ah,(%rax,%rax,1)
    20aa:	00 00                	add    %al,(%rax)
    20ac:	34 00                	xor    $0x0,%al
    20ae:	00 00                	add    %al,(%rax)
    20b0:	70 ef                	jo     20a1 <__GNU_EH_FRAME_HDR+0x6d>
    20b2:	ff                   	(bad)  
    20b3:	ff 30                	pushq  (%rax)
    20b5:	00 00                	add    %al,(%rax)
    20b7:	00 00                	add    %al,(%rax)
    20b9:	0e                   	(bad)  
    20ba:	10 46 0e             	adc    %al,0xe(%rsi)
    20bd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20c0:	0b 77 08             	or     0x8(%rdi),%esi
    20c3:	80 00 3f             	addb   $0x3f,(%rax)
    20c6:	1a 3a                	sbb    (%rdx),%bh
    20c8:	2a 33                	sub    (%rbx),%dh
    20ca:	24 22                	and    $0x22,%al
    20cc:	00 00                	add    %al,(%rax)
    20ce:	00 00                	add    %al,(%rax)
    20d0:	14 00                	adc    $0x0,%al
    20d2:	00 00                	add    %al,(%rax)
    20d4:	5c                   	pop    %rsp
    20d5:	00 00                	add    %al,(%rax)
    20d7:	00 78 ef             	add    %bh,-0x11(%rax)
    20da:	ff                   	(bad)  
    20db:	ff 10                	callq  *(%rax)
	...
    20e5:	00 00                	add    %al,(%rax)
    20e7:	00 14 00             	add    %dl,(%rax,%rax,1)
    20ea:	00 00                	add    %al,(%rax)
    20ec:	74 00                	je     20ee <__GNU_EH_FRAME_HDR+0xba>
    20ee:	00 00                	add    %al,(%rax)
    20f0:	70 ef                	jo     20e1 <__GNU_EH_FRAME_HDR+0xad>
    20f2:	ff                   	(bad)  
    20f3:	ff 20                	jmpq   *(%rax)
	...
    20fd:	00 00                	add    %al,(%rax)
    20ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2102:	00 00                	add    %al,(%rax)
    2104:	8c 00                	mov    %es,(%rax)
    2106:	00 00                	add    %al,(%rax)
    2108:	61                   	(bad)  
    2109:	f0 ff                	lock (bad) 
    210b:	ff f0                	push   %rax
    210d:	00 00                	add    %al,(%rax)
    210f:	00 00                	add    %al,(%rax)
    2111:	45 0e                	rex.RB (bad) 
    2113:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2119:	02 e7                	add    %bh,%ah
    211b:	0c 07                	or     $0x7,%al
    211d:	08 00                	or     %al,(%rax)
    211f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    2123:	00 ac 00 00 00 38 f1 	add    %ch,-0xec80000(%rax,%rax,1)
    212a:	ff                   	(bad)  
    212b:	ff 65 00             	jmpq   *0x0(%rbp)
    212e:	00 00                	add    %al,(%rax)
    2130:	00 46 0e             	add    %al,0xe(%rsi)
    2133:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2139:	8e 03                	mov    (%rbx),%es
    213b:	45 0e                	rex.RB (bad) 
    213d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2143:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302f8d <_end+0xffffffff862fef75>
    2149:	06                   	(bad)  
    214a:	48 0e                	rex.W (bad) 
    214c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2152:	6e                   	outsb  %ds:(%rsi),(%dx)
    2153:	0e                   	(bad)  
    2154:	38 41 0e             	cmp    %al,0xe(%rcx)
    2157:	30 41 0e             	xor    %al,0xe(%rcx)
    215a:	28 42 0e             	sub    %al,0xe(%rdx)
    215d:	20 42 0e             	and    %al,0xe(%rdx)
    2160:	18 42 0e             	sbb    %al,0xe(%rdx)
    2163:	10 42 0e             	adc    %al,0xe(%rdx)
    2166:	08 00                	or     %al,(%rax)
    2168:	10 00                	adc    %al,(%rax)
    216a:	00 00                	add    %al,(%rax)
    216c:	f4                   	hlt    
    216d:	00 00                	add    %al,(%rax)
    216f:	00 60 f1             	add    %ah,-0xf(%rax)
    2172:	ff                   	(bad)  
    2173:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2179 <__GNU_EH_FRAME_HDR+0x145>
    2179:	00 00                	add    %al,(%rax)
	...

000000000000217c <__FRAME_END__>:
    217c:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .init_array:

0000000000003db0 <__frame_dummy_init_array_entry>:
    3db0:	60                   	(bad)  
    3db1:	11 00                	adc    %eax,(%rax)
    3db3:	00 00                	add    %al,(%rax)
    3db5:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .fini_array:

0000000000003db8 <__do_global_dtors_aux_fini_array_entry>:
    3db8:	20 11                	and    %dl,(%rcx)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .dynamic:

0000000000003dc0 <_DYNAMIC>:
    3dc0:	01 00                	add    %eax,(%rax)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	01 00                	add    %eax,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	0c 00                	or     $0x0,%al
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	00 10                	add    %dl,(%rax)
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	0d 00 00 00 00       	or     $0x0,%eax
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 d8                	add    %bl,%al
    3de9:	12 00                	adc    (%rax),%al
    3deb:	00 00                	add    %al,(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 19                	add    %bl,(%rcx)
    3df1:	00 00                	add    %al,(%rax)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 b0 3d 00 00 00    	add    %dh,0x3d(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 1b                	add    %bl,(%rbx)
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 08                	add    %cl,(%rax)
    3e09:	00 00                	add    %al,(%rax)
    3e0b:	00 00                	add    %al,(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 1a                	add    %bl,(%rdx)
    3e11:	00 00                	add    %al,(%rax)
    3e13:	00 00                	add    %al,(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 b8 3d 00 00 00    	add    %bh,0x3d(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3e22:	00 00                	add    %al,(%rax)
    3e24:	00 00                	add    %al,(%rax)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	08 00                	or     %al,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	f5                   	cmc    
    3e31:	fe                   	(bad)  
    3e32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e45 <_DYNAMIC+0x85>
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 88 04 00 00 00    	add    %cl,0x4(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 06                	add    %al,(%rsi)
    3e51:	00 00                	add    %al,(%rax)
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 c8                	add    %cl,%al
    3e59:	03 00                	add    (%rax),%eax
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 0a                	add    %cl,(%rdx)
    3e61:	00 00                	add    %al,(%rax)
    3e63:	00 00                	add    %al,(%rax)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 9f 00 00 00 00    	add    %bl,0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 0b                	add    %cl,(%rbx)
    3e71:	00 00                	add    %al,(%rax)
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 18                	add    %bl,(%rax)
    3e79:	00 00                	add    %al,(%rax)
    3e7b:	00 00                	add    %al,(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e85 <_DYNAMIC+0xc5>
	...
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 03                	add    %al,(%rbx)
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 02                	add    %al,(%rdx)
    3ea1:	00 00                	add    %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 30                	add    %dh,(%rax)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eb2:	00 00                	add    %al,(%rax)
    3eb4:	00 00                	add    %al,(%rax)
    3eb6:	00 00                	add    %al,(%rax)
    3eb8:	07                   	(bad)  
    3eb9:	00 00                	add    %al,(%rax)
    3ebb:	00 00                	add    %al,(%rax)
    3ebd:	00 00                	add    %al,(%rax)
    3ebf:	00 17                	add    %dl,(%rdi)
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 28                	add    %ch,(%rax)
    3ec9:	06                   	(bad)  
    3eca:	00 00                	add    %al,(%rax)
    3ecc:	00 00                	add    %al,(%rax)
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	07                   	(bad)  
    3ed1:	00 00                	add    %al,(%rax)
    3ed3:	00 00                	add    %al,(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 68 05             	add    %ch,0x5(%rax)
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	08 00                	or     %al,(%rax)
    3ee2:	00 00                	add    %al,(%rax)
    3ee4:	00 00                	add    %al,(%rax)
    3ee6:	00 00                	add    %al,(%rax)
    3ee8:	c0 00 00             	rolb   $0x0,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 09                	add    %cl,(%rcx)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 18                	add    %bl,(%rax)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 1e                	add    %bl,(%rsi)
    3f01:	00 00                	add    %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 08                	add    %cl,(%rax)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 fb                	add    %bh,%bl
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 01                	add    %al,(%rcx)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	08 00                	or     %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 fe                	add    %bh,%dh
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 38                	add    %bh,(%rax)
    3f29:	05 00 00 00 00       	add    $0x0,%eax
    3f2e:	00 00                	add    %al,(%rax)
    3f30:	ff                   	(bad)  
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 01                	add    %al,(%rcx)
    3f39:	00 00                	add    %al,(%rax)
    3f3b:	00 00                	add    %al,(%rax)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 f0                	add    %dh,%al
    3f41:	ff                   	(bad)  
    3f42:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 28                	add    %ch,(%rax)
    3f49:	05 00 00 00 00       	add    $0x0,%eax
    3f4e:	00 00                	add    %al,(%rax)
    3f50:	f9                   	stc    
    3f51:	ff                   	(bad)  
    3f52:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 03                	add    %al,(%rbx)
	...

Дизассемблирование раздела .got:

0000000000003fb0 <_GLOBAL_OFFSET_TABLE_>:
    3fb0:	c0 3d 00 00 00 00 00 	sarb   $0x0,0x0(%rip)        # 3fb7 <_GLOBAL_OFFSET_TABLE_+0x7>
	...
    3fc7:	00 30                	add    %dh,(%rax)
    3fc9:	10 00                	adc    %al,(%rax)
    3fcb:	00 00                	add    %al,(%rax)
    3fcd:	00 00                	add    %al,(%rax)
    3fcf:	00 40 10             	add    %al,0x10(%rax)
	...

Дизассемблирование раздела .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .bss:

0000000000004010 <completed.8060>:
	...

Дизассемблирование раздела .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753748 <_end+0x6274f730>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 39                	and    %bh,(%rcx)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)
